name: Terraform Validate, Plan, Apply

on: [workflow_dispatch,push]

env:
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  PlanID: ${{ github.run_id }}-${{ github.run_number }}

defaults:
  run:
    working-directory: .

jobs:
  #---------------------------------------------------------------------------------------------------------
  # perform TF plan only, then store plan as artifact
  #---------------------------------------------------------------------------------------------------------
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      #---------------
      # initialize job
      #---------------
      - name: Cache Repo
        id: cache-repo
        uses: actions/cache@v3
        with:
          path: .
          key: repo-cache

      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

       #------------------------------------------------------------------------------
       # perform terraform plan, show result and store plan as artifact (for next job)
       #------------------------------------------------------------------------------

#      - name: Terraform Validate
#        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=plan.${{ env.PlanID }}.bin

      - name: Terraform Show Plan
        run: terraform show plan.${{ env.PlanID }}.bin

      - name: Store Plan and providers as artifact
        uses: actions/upload-artifact@v2
        with:
          name: Terraform-Artifacts
          path: |
            plan.${{ env.PlanID }}.bin
            .terraform/providers/

  #---------------------------------------------------------------------------------------------------------
  # wait for approval (required for environment "deploy"), then perform tf apply
  #---------------------------------------------------------------------------------------------------------
  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest

    environment:
      name: deploy
      url: https://github.com

    steps:
      #---------------
      # initialize job
      #---------------
      - name: Cache Repo
        id: cache-repo
        uses: actions/cache@v3
        with:
          path: .
          key: repo-cache

      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - uses: actions/download-artifact@v3
        with:
          name: Terraform-Artifacts

      - name: Terraform Init
        run: terraform init

      #--------------------------------------------------------------
      # Download plan which was generated in previous job, then apply
      #--------------------------------------------------------------
      - name: Terraform Apply
        run: terraform apply --auto-approve

#      - name: Git Status
#        run: (git status ;   git config --global user.email "marcus.brosda@gmx.de"; git config --global user.name "Marcus Brosda"; git add .terraform/terraform.tfstate; git commit -m 'new tfstate'; git push); true
