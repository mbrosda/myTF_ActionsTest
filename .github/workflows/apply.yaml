name: Terraform Validate, Plan, Apply

on: [workflow_dispatch]

defaults:
  run:
    working-directory: .

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      PlanID: ${{ github.run_id }}-${{ github.run_number }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

#      - name: Terraform Validate
#        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=plan.${{ env.PlanID }}.bin

      - name: Store Plan as artifact
        uses: actions/upload-artifact@v2
        with:
          name: Terraform-Plan
          path: plan.${{ env.PlanID }}.bin

  terraform-apply:
    needs: job1
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      PlanID: ${{ github.run_id }}-${{ github.run_number }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - uses: actions/download-artifact@v3
        with:
          name: Terraform-Plan

      - name: Terraform Show Plan
        run: terraform show plan.${{ env.PlanID }}.bin

#      - name: Terraform Apply
#        run: terraform apply --auto-approve

      - name: Git Status
        run: git status ;   git config --global user.email "marcus.brosda@gmx.de"; git config --global user.name "Marcus Brosda"; git add .terraform/terraform.tfstate; git commit -m 'new tfstate'; git push
